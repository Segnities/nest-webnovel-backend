// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Novel {
  id                  Int                @id @default(autoincrement())
  title               String
  description         String
  img                 String
  releaseYear         Int
  coverImg            String?
  createdAt           DateTime           @default(now())
  updatedAt           DateTime           @updatedAt
  views               Int                @default(0)
  country             Country            @relation(fields: [countryId], references: [id])
  countryId           Int
  status              Status             @relation(fields: [statusId], references: [id])
  statusId            Int
  authorId            Int
  author              Author             @relation(fields: [authorId], references: [id])
  translationStatusId Int
  translationStatus   TranslationStatus  @relation(fields: [translationStatusId], references: [id])
  formatId            Int
  format              Format             @relation(fields: [formatId], references: [id])
  tags                Tag[]
  genres              Genre[]
  alternativeTitles   AlternativeTitle[]
  chapters            Chapter[]

  @@map("novel")
}

model Chapter {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  likes     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  novelId   Int
  novel     Novel    @relation(fields: [novelId], references: [id])
}
//novels + chapters
model Team {
  id        Int      @id @default(autoincrement())
  name      String
  chapters_count Int @default(0)
  books_count Int @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Format {
  id     Int     @id @default(autoincrement())
  title  String
  novels Novel[]

  @@map("format")
}

model TranslationStatus {
  id     Int     @id @default(autoincrement())
  title  String
  novels Novel[]

  @@map("translation_status")
}

model AlternativeTitle {
  id      Int    @id @default(autoincrement())
  title   String
  novelId Int
  novel   Novel  @relation(fields: [novelId], references: [id])

  @@map("alternative_title")
}

model Tag {
  id     Int     @id @default(autoincrement())
  title  String
  novels Novel[]

  @@map("tag")
}

model Genre {
  id     Int     @id @default(autoincrement())
  title  String  @unique
  novels Novel[]

  @@map("genre")
}

model Country {
  id     Int     @id @default(autoincrement())
  title  String  @unique
  novels Novel[]

  @@map("country")
}

model Status {
  id     Int     @id @default(autoincrement())
  title  String  @unique
  novels Novel[]

  @@map("status")
}

model Author {
  id     Int     @id @default(autoincrement())
  name   String
  img    String
  novels Novel[]

  @@map("author")
}
